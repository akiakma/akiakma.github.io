{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/blogsynchronousasynchronous","result":{"data":{"markdownRemark":{"id":"38dd24e3-ef29-54f8-9b7f-506cc091717d","html":"<h2 id=\"동기와-비동기\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EA%B8%B0%EC%99%80-%EB%B9%84%EB%8F%99%EA%B8%B0\" aria-label=\"동기와 비동기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동기와 비동기</h2>\n<h4 id=\"동기와-비동기synchronous--asynchronous\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EA%B8%B0%EC%99%80-%EB%B9%84%EB%8F%99%EA%B8%B0synchronous--asynchronous\" aria-label=\"동기와 비동기synchronous  asynchronous permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동기와 비동기(Synchronous &#x26; ASynchronous)</h4>\n<p><strong>동기적 처리</strong></p>\n<p>코드가 위에서부터 아래로 내려오며 하나가 끝나면 다음 코드가 실행되는 방식을 동기적 처리라고 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">console.log(&quot;first&quot;);\nconsole.log(&quot;second&quot;);\nconsole.log(&quot;third&quot;);\n\n//output\nfirst\nsecond\nthird</code></pre></div>\n<p><strong>비동기적 처리</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"react\"><pre class=\"language-react\"><code class=\"language-react\">console.log(first);\nsetTimeout(()=&gt;{\n  console.log(&quot;second&quot;);\n},0)\nconsole.log(third);\n\n//output\nfirst \nthird\nsecond</code></pre></div>\n<p>first, second, third순으로 찍힐 것으로 예상하였는데 조금 다르게 찍힙니다. 바로 <code class=\"language-text\">setTimeout()</code>이라는 비동기적 API가 있기 때문입니다. <code class=\"language-text\">setTimeout()</code> 에 지연시간이 0이라서 바로 실행될것같지만 그렇지 않습니다. 위 코드의 경우 컴퓨터는 다음과 같이 읽습니다.</p>\n<ol>\n<li>첫 번째 줄에서 console.log(“first”를 만나고) first를 호출.</li>\n<li>setTimeout()메소드를 만나고, 해당 메소드가 비동기적 메소드임을 파악 -> 이를 비동기적 처리하는 다른프로그램에 위임한다.</li>\n<li>다음코드를 실행하여 third를 발생시킨다.</li>\n<li>setTimeout()메소드를 위임받아 처리한 프로그램은”<strong>비동기적 API를 제외한 모든 코드가실행된 이후</strong>“에 결과를 콘솔에 찍는다.</li>\n</ol>\n<h4 id=\"비동기적-코드의-실행-결과는-동기적-코드의-실행이-완료되면-값을-반환한다\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EB%8F%99%EA%B8%B0%EC%A0%81-%EC%BD%94%EB%93%9C%EC%9D%98-%EC%8B%A4%ED%96%89-%EA%B2%B0%EA%B3%BC%EB%8A%94-%EB%8F%99%EA%B8%B0%EC%A0%81-%EC%BD%94%EB%93%9C%EC%9D%98-%EC%8B%A4%ED%96%89%EC%9D%B4-%EC%99%84%EB%A3%8C%EB%90%98%EB%A9%B4-%EA%B0%92%EC%9D%84-%EB%B0%98%ED%99%98%ED%95%9C%EB%8B%A4\" aria-label=\"비동기적 코드의 실행 결과는 동기적 코드의 실행이 완료되면 값을 반환한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비동기적 코드의 실행 결과는 동기적 코드의 실행이 완료되면 값을 반환한다.</h4>\n<h3 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h3 id=\"-1\" style=\"position:relative;\"><a href=\"#-1\" aria-label=\" 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>","fields":{"slug":"/posts/blogsynchronousasynchronous","tagSlugs":["/tag/synchronous/","/tag/asynchronous/","/tag/javascript/"]},"frontmatter":{"date":"2020-03-18T19:10:20.169Z","description":"프로그래밍에서 동기 비동기적 처리에 관하여 작성하였습니다.","tags":["synchronous","asynchronous","Javascript"],"title":"Synchronous & ASynchronous","socialImage":null}}},"pageContext":{"slug":"/posts/blogsynchronousasynchronous"}}}