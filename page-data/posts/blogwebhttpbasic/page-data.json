{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/blogwebhttpbasic","result":{"data":{"markdownRemark":{"id":"e9b7b8ac-d907-52e2-83fc-a912c231d7fd","html":"<h1 id=\"http-구조-및-핵심-요소\" style=\"position:relative;\"><a href=\"#http-%EA%B5%AC%EC%A1%B0-%EB%B0%8F-%ED%95%B5%EC%8B%AC-%EC%9A%94%EC%86%8C\" aria-label=\"http 구조 및 핵심 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP 구조 및 핵심 요소</h1>\n<h2 id=\"http\" style=\"position:relative;\"><a href=\"#http\" aria-label=\"http permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP</h2>\n<ul>\n<li>HyperText Transfer Protocol</li>\n<li>\n<p>하이퍼텍스트(HTML) 문서를 교환하기 위해 만들어진 protocol(통신 규약).</p>\n<ul>\n<li>즉 웹상에서 네트워크로 서버끼리 통신을 할때 어떠한 형식으로 서로 통신을 하자고 규정해 놓은 “통신 형식” 혹은 “통신 구조” 라고 보면 된다.</li>\n<li>프론트앤드 서버와 클라이언트간의 통신에 사용된다.</li>\n<li>또한 백앤드와 프론트앤드 서버간에의 통신에도 사용된다.</li>\n</ul>\n</li>\n<li>HTTP는 TCP/IP 기반으로 되어있다.</li>\n</ul>\n<h2 id=\"http-핵심-요소\" style=\"position:relative;\"><a href=\"#http-%ED%95%B5%EC%8B%AC-%EC%9A%94%EC%86%8C\" aria-label=\"http 핵심 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP 핵심 요소</h2>\n<p>HTTP 통신 방식</p>\n<ul>\n<li>\n<p>HTTP 기본적으로 요청/응답 (request/response) 구조로 되어있다.</p>\n<ul>\n<li>클라이언트가 HTTP request를 서버에 보내면 서버는 HTTP response를 보내는 구조.</li>\n<li>클라이언트와 서버의 모든 통신이 요청과 응답으로 이루어 진다.</li>\n</ul>\n</li>\n<li>\n<p>HTTP는 Stateless 이다.</p>\n<ul>\n<li>Stateless 란 말그대로 state(상태)를 저장하지 않는 다는 뜻.</li>\n<li>즉, 요청이 오면 그에 응답을 할뿐, 여러 요청/응답 끼리 연결되어 있지 않다는 뜻이다. 즉 각각의 요청/응답은 독립적인 요청/응답 이다.</li>\n<li>예를 들어, 클라이언트가 요청을 보내고 응답을 받은후, 조금 있다 다시 요청을 보낼때, 전에 보낸 요청/응답에 대해 알지 못한다는 뜻이다.</li>\n<li>그래서 만일 여러 요청과응답 의 진행과정이나 데이터가 필요할때는 쿠키나 세션 등등을 사용하게 된다.</li>\n</ul>\n</li>\n</ul>\n<p>HTTP Request 구조</p>\n<ul>\n<li>\n<p>HTTP request 메세지는 크게 3부분으로 구성된다:</p>\n<ul>\n<li>status line</li>\n<li>headers</li>\n<li>body</li>\n</ul>\n</li>\n</ul>\n<p>Start Line</p>\n<ul>\n<li>말 그대로 HTTP request의 첫 라인(이름이 너무 식상하지만, 뭐 이미 이렇게 지어졌다).</li>\n<li>\n<p>HTTP request의 start line또한 3부분으로 구성되어 있음.</p>\n<ul>\n<li>HTTP Method</li>\n<li>해당 request가 의도한 action을 정의하는 부분.</li>\n<li>HTTP Methods에는 <code class=\"language-text\">GET</code>, <code class=\"language-text\">POST</code>, <code class=\"language-text\">PUT</code>, <code class=\"language-text\">DELETE</code>, <code class=\"language-text\">OPTIONS</code> 등등이 있다.</li>\n<li>주로 <code class=\"language-text\">GET</code> 과 <code class=\"language-text\">POST</code>과 쓰임.</li>\n<li>Request target</li>\n<li>해당 request가 전송되는 목표 uri.</li>\n<li>예를 들어 <code class=\"language-text\">/login</code>.</li>\n<li>HTTP Version</li>\n<li>말 그대로 사용되는 HTTP 버젼. 버젼에는 <code class=\"language-text\">1.0</code>, <code class=\"language-text\">1.1</code>, <code class=\"language-text\">2.0</code> 등이 있다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">GET /search HTTP/1.1</code></pre></div>\n<p>Headers</p>\n<ul>\n<li>\n<p>해당 request에 대한 추가 정보(addtional information)를 담고 있는 부분.</p>\n<ul>\n<li>예를 들어, request 메세지 body의 총 길이 (Content-Length) 등.</li>\n</ul>\n</li>\n<li>\n<p>Key:Value 값으로 되어있다 (</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">:</code></pre></div>\n<p>이 사용됨).</p>\n<ul>\n<li><code class=\"language-text\">key:value</code></li>\n<li><code class=\"language-text\">HOST: google.com</code> => Key = <code class=\"language-text\">HOST</code>, Value = <code class=\"language-text\">google.com</code></li>\n</ul>\n</li>\n<li>Headers도 크게 3부분으로 나뉘지만(<code class=\"language-text\">general headers</code>, <code class=\"language-text\">request headers</code>, <code class=\"language-text\">entity headers</code>) 너무 자세한 부분임으로, 3부분 으로 구성되어 있다는것만 알고 있어도 괜찮다.</li>\n<li>\n<p>자주 사용되는 header 정보에는 다음이 있다:</p>\n<ul>\n<li>Host</li>\n<li>요청이 전송되는 target의 host url: 예를 들어, google.com</li>\n<li>User-Agent</li>\n<li>요청을 보내는 클라이언트의 대한 정보: 예를 들어, 웹브라우저에 대한 정보.</li>\n<li>Accept</li>\n<li>해당 요청이 받을 수 있는 응답(response) 타입.</li>\n<li>Connection</li>\n<li>해당 요청이 끝난후에 클라이언트와 서버가 계속해서 네트워크 컨넥션을 유지 할것인지 아니면 끊을것인지에 대해 지시하는 부분.</li>\n<li>Content-Type</li>\n<li>해당 요청이 보내는 메세지 body의 타입. 예를 들어, JSON을 보내면 <code class=\"language-text\">application/json</code>.</li>\n<li>Content-Length:</li>\n<li>메세지 body의 길이.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Accept: */*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nContent-Type: application/json\nContent-Length: 257\nHost: google.com\nUser-Agent: HTTPie/0.9.3</code></pre></div>\n<p>Body</p>\n<ul>\n<li>해당 reqeust의 실제 메세지/내용.</li>\n<li>\n<p>Body가 없는 request도 많다.</p>\n<ul>\n<li>예를 들어, GET request들은 대부분 body가 없는 경우가 많음.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">POST /payment-sync HTTP/1.1\n\nAccept: application/json\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nContent-Length: 83\nContent-Type: application/json\nHost: intropython.com\nUser-Agent: HTTPie/0.9.3\n\n{\n    &quot;imp_uid&quot;: &quot;imp_1234567890&quot;,\n    &quot;merchant_uid&quot;: &quot;order_id_8237352&quot;,\n    &quot;status&quot;: &quot;paid&quot;\n}</code></pre></div>\n<p>HTTP Response 구조</p>\n<ul>\n<li>\n<p>Response도 request와 마찬가지로 크게 3부분으로 구성되어 있다.</p>\n<ul>\n<li>Status line</li>\n<li>Headers</li>\n<li>Body</li>\n</ul>\n</li>\n</ul>\n<p>Status Line</p>\n<ul>\n<li>Response의 상태를 간략하게 나타내주는 부분.</li>\n<li>\n<p>3부분으로 구성되어 있다.</p>\n<ul>\n<li>HTTP 버젼</li>\n<li>Status code: 응답 상태를 나타내는 코드. 숫자로 되어 있는 코드.</li>\n<li>예를 들어, <code class=\"language-text\">200</code></li>\n<li>Status text: 응답 상태를 간략하게 설명해주는 부분.</li>\n<li>예를 들어, “Not Found”</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">HTTP/1.1 404 Not Found</code></pre></div>\n<p>Headers</p>\n<ul>\n<li>Response의 headers와 동일하다.</li>\n<li>\n<p>다만 response에서만 사용되는 header 값들이 있다.</p>\n<ul>\n<li>예를 들어, <code class=\"language-text\">User-Agent</code> 대신에 <code class=\"language-text\">Server</code> 헤더가 사용된다.</li>\n</ul>\n</li>\n</ul>\n<p>Body</p>\n<ul>\n<li>Response의 body와 일반적으로 동일하다.</li>\n<li>Request와 마찬가지로 모든 response가 body가 있지는 않다. 데이터를 전송할 필요가 없을경우 body가 비어있게 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">HTTP/1.1 404 Not Found\n\nConnection: close\nContent-Length: 1573\nContent-Type: text/html; charset=UTF-8\nDate: Mon, 20 Aug 2018 07:59:05 GMT\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=en&gt;\n  &lt;meta charset=utf-8&gt;\n  &lt;meta name=viewport content=&quot;initial-scale=1, minimum-scale=1, width=device-width&quot;&gt;\n  &lt;title&gt;Error 404 (Not Found)!!1&lt;/title&gt;\n  &lt;style&gt;\n    *{margin:0;padding:0}html,code{font:15px/22px arial,sans-serif}html{background:#fff;color:#222;padding:15px}body{margin:7% auto 0;max-width:390px;min-height:180px;padding:30px 0 15px}* &gt; body{background:url(//www.google.com/images/errors/robot.png) 100% 5px no-repeat;padding-right:205px}p{margin:11px 0 22px;overflow:hidden}ins{color:#777;text-decoration:none}a img{border:0}@media screen and (max-width:772px){body{background:none;margin-top:0;max-width:none;padding-right:0}}#logo{background:url(//www.google.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png) no-repeat;margin-left:-5px}@media only screen and (min-resolution:192dpi){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat 0% 0%/100% 100%;-moz-border-image:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) 0}}@media only screen and (-webkit-min-device-pixel-ratio:2){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat;-webkit-background-size:100% 100%}}#logo{display:inline-block;height:54px;width:150px}\n  &lt;/style&gt;\n  &lt;a href=//www.google.com/&gt;&lt;span id=logo aria-label=Google&gt;&lt;/span&gt;&lt;/a&gt;\n  &lt;p&gt;&lt;b&gt;404.&lt;/b&gt; &lt;ins&gt;That’s an error.&lt;/ins&gt;\n  &lt;p&gt;The requested URL &lt;code&gt;/payment-sync&lt;/code&gt; was not found on this server.  &lt;ins&gt;That’s all we know.&lt;/ins&gt;</code></pre></div>\n<h2 id=\"자주-쓰이는-http-methods\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EC%A3%BC-%EC%93%B0%EC%9D%B4%EB%8A%94-http-methods\" aria-label=\"자주 쓰이는 http methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자주 쓰이는 HTTP Methods</h2>\n<p>GET</p>\n<ul>\n<li>이름 그대로 어떠한 데이타를 서버로 부터 받아(GET)올때 주로 사용하는 Method.</li>\n<li>데이터 생성/수정/삭제 없이 받아오기만 할때 사용된다.</li>\n<li>가장 간단하고 많이 사용되는 HTTP Method</li>\n<li>언급한대로 주로 데이터를 받아올때 사용되기 때문에 request에 body를 안 보내는 경우가 많다.</li>\n</ul>\n<p>POST</p>\n<ul>\n<li>데이터를 생성/수정/삭제 할때 주로 사용되는 Method.</li>\n<li>데이터를 생성 및 수정 할때 많이 사용하기 때문에 대부분의 경우 requst body가 포함되서 보내진다.</li>\n</ul>\n<h2 id=\"알고-있으면-좋은-http-methods\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0-%EC%9E%88%EC%9C%BC%EB%A9%B4-%EC%A2%8B%EC%9D%80-http-methods\" aria-label=\"알고 있으면 좋은 http methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고 있으면 좋은 HTTP Methods</h2>\n<p>OPTIONS</p>\n<ul>\n<li>주로 요청 URI에서 사용할 수 있는 Method를 받아올때 사용된다.</li>\n<li>예를 들어, <code class=\"language-text\">/update</code> uri에서 어떤 method를 요청 가능한가(<code class=\"language-text\">GET</code>? <code class=\"language-text\">POST</code>?)를 알고 싶으면 먼저 <code class=\"language-text\">OPTIONS</code> 요청을 사용해서 확인하게 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">http -v OPTIONS http://example.org\n\nOPTIONS / HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nContent-Length: 0\nHost: example.org\nUser-Agent: HTTPie/0.9.3\n\n\n\nHTTP/1.1 200 OK\nAllow: OPTIONS, GET, HEAD, POST\nCache-Control: max-age=604800\nContent-Length: 0\nDate: Mon, 20 Aug 2018 08:37:45 GMT\nExpires: Mon, 27 Aug 2018 08:37:45 GMT\nServer: EOS (vny006/0450)</code></pre></div>\n<p>PUT</p>\n<ul>\n<li><code class=\"language-text\">POST</code>와 비슷하다. 데이터를 생성 할때 사용되는 Method.</li>\n<li><code class=\"language-text\">POST</code>와 겹치기 때문에 <code class=\"language-text\">PUT</code>을 사용하는 곳도 있고 <code class=\"language-text\">POST</code>로 통일해서 사용하는 곳도 있는데, 최근 몇년 사이에 <code class=\"language-text\">POST</code>에 밀려서 잘 사용안되는 추세.</li>\n</ul>\n<p>DELETE</p>\n<ul>\n<li>특정 데이터를 서버에서 삭제 요청을 보낼때 쓰이는 Method</li>\n<li><code class=\"language-text\">PUT</code>과 마찬가지로 <code class=\"language-text\">POST</code>에 밀려서 잘 사용안되는 추세.</li>\n</ul>\n<h2 id=\"자주-쓰이는-http-status-code\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EC%A3%BC-%EC%93%B0%EC%9D%B4%EB%8A%94-http-status-code\" aria-label=\"자주 쓰이는 http status code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자주 쓰이는 HTTP Status Code</h2>\n<p>200 OK</p>\n<ul>\n<li>가장 자주 보게되는 status code.</li>\n<li>문제없이 다 잘 실행 되었을때 보내는 코드.</li>\n</ul>\n<p>301 Moved Permanently</p>\n<ul>\n<li>해당 URI가 다른 주소로 바뀌었을때 보내는 코드.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">HTTP/1.1 301 Moved Permanently\nLocation: http://www.example.org/index.asp</code></pre></div>\n<p>400 Bad Request</p>\n<ul>\n<li>해당 요청이 잘못된 요청일대 보내는 코드.</li>\n<li>\n<p>주로 요청에 포함된 input 값들이 잘못된 값들이 보내졌을때 사용되는 코드.</p>\n<ul>\n<li>예를 들어, 전화번호를 보내야 되는데 text가 보내졌을때 등등.</li>\n</ul>\n</li>\n</ul>\n<p>401 Unauthorized</p>\n<ul>\n<li>유저가 해당 요청을 진행 할려면 먼저 로그인을 하거나 회원 가입을 하거나 등등이 필요하다는것을 나타내려 할때 쓰이는 코드.</li>\n</ul>\n<p>403 Forbidden</p>\n<ul>\n<li>유저가 해당 요청에 대한 권한이 없다는 뜻.</li>\n<li>예를 들어, 오직 과금을 한 유저만 볼 수 있는 데이터를 요청 했을때 등.</li>\n</ul>\n<p>404 Not Found</p>\n<ul>\n<li>요청된 uri가 존재 하지 않는다는 뜻.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">http -v google.com/no-such-uri\n\nGET /no-such-uri HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nHost: google.com\nUser-Agent: HTTPie/0.9.3\n\nHTTP/1.1 404 Not Found\nContent-Length: 1572\nContent-Type: text/html; charset=UTF-8\nDate: Mon, 20 Aug 2018 08:46:48 GMT\nReferrer-Policy: no-referrer</code></pre></div>\n<p>500 Internal Server Error</p>\n<ul>\n<li>서버에서 에러가 났을때 사용되는 코드.</li>\n<li>API 개발을 하는 백앤드 개발자들이 싫어하는 코드.</li>\n</ul>\n<h1 id=\"restful-http-api-구조-및-핵심-개념\" style=\"position:relative;\"><a href=\"#restful-http-api-%EA%B5%AC%EC%A1%B0-%EB%B0%8F-%ED%95%B5%EC%8B%AC-%EA%B0%9C%EB%85%90\" aria-label=\"restful http api 구조 및 핵심 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RESTful HTTP API 구조 및 핵심 개념</h1>\n<h2 id=\"기본-배경-지식\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%B0%B0%EA%B2%BD-%EC%A7%80%EC%8B%9D\" aria-label=\"기본 배경 지식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 배경 지식</h2>\n<ul>\n<li>\n<p>URI:</p>\n<ul>\n<li>Uniform Resource Identifier</li>\n<li>해당 사이트의 특정 자원의 위치를 나타내는 유일한 주소.</li>\n<li><code class=\"language-text\">/login</code>, <code class=\"language-text\">/news</code></li>\n<li><code class=\"language-text\">https://finance.naver.com/marketindex/</code></li>\n</ul>\n</li>\n<li>\n<p>HTTP Method</p>\n<ul>\n<li>HTTP request가 의도하는 action을 정의한것.</li>\n<li><code class=\"language-text\">POST</code>, <code class=\"language-text\">GET</code> 등등.</li>\n</ul>\n</li>\n<li>\n<p>Payload</p>\n<ul>\n<li>HTTP request에서 보내는 데이터 (body)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"representational-state-transfer\" style=\"position:relative;\"><a href=\"#representational-state-transfer\" aria-label=\"representational state transfer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REpresentational State Transfer</h2>\n<ul>\n<li>\n<p>웹상에서 사용되는 여러 리소스를 HTTP URI로 표현하고 그 리소스에 대한 행위를 HTTP Method로 정의하는 방식.</p>\n<ul>\n<li>즉, 리소스(HTTP URI로 정의된)를 어떻게 한다(HTTP Method + Payload)를 구조적으로 깔끔하게 표현하는것.</li>\n<li>Method는 주로 <code class=\"language-text\">GET</code>과 <code class=\"language-text\">POST</code>만 사용한다.</li>\n<li><code class=\"language-text\">PUT</code>과 <code class=\"language-text\">DELETE</code> 등도 사용하는 곳도 있지만, 그냥 <code class=\"language-text\">GET</code>과 <code class=\"language-text\">POST</code>만 사용하는 것이 단순하기 때문에 <code class=\"language-text\">GET</code>과 <code class=\"language-text\">POST</code>만 사용하는 추세.</li>\n</ul>\n</li>\n<li>\n<p>예를 들어, 삼성전자 주식 정보를 받기 위한 HTTP 요청:</p>\n<ul>\n<li><code class=\"language-text\">HTTP GET https://api.trueshort.com/stock/005930</code></li>\n</ul>\n</li>\n<li>\n<p>유저의 보유 주식 종목들을 DB에 저장하는 HTTP 요청:</p>\n<ul>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">HTTP POST https://api.trueshort.com/user/portfolio</code></pre></div>\n</li>\n</ul>\n<p>{\n“user_id” : 1,\n“stocks”: [\n“005930”,\n“298730”,\n“378900”\n]\n}</p>\n</li>\n</ul>\n<h2 id=\"restful-api의-장점\" style=\"position:relative;\"><a href=\"#restful-api%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"restful api의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RESTful API의 장점</h2>\n<ul>\n<li>여러 장점들이 있지만, 사실 그중 가장 명확한 장점은 바로 <code class=\"language-text\">self-descriptiveness</code> 이다.</li>\n<li>\n<p>RESTful API는 그 자체만으로도 API의 목적이 쉽게 이해가 된다.</p>\n<ul>\n<li>예를 들어, 위의 <code class=\"language-text\">HTTP GET https://api.trueshort.com/stock/005930</code> ` 요청의 경우, 문서나 주석이 없이도 <em>”<a href=\"https://api.trueshort.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://api.trueshort.com</a> 라는 API에서 삼성전자 주식에 관한 정보를 HTTP 요청을 통해 받아오는 구나”</em> 라는 해석이 쉽게 가능하다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"restful-api를-개발할때-유의-할점\" style=\"position:relative;\"><a href=\"#restful-api%EB%A5%BC-%EA%B0%9C%EB%B0%9C%ED%95%A0%EB%95%8C-%EC%9C%A0%EC%9D%98-%ED%95%A0%EC%A0%90\" aria-label=\"restful api를 개발할때 유의 할점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RESTful API를 개발할때 유의 할점</h2>\n<ul>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/</code></pre></div>\n<p>(슬래시)는 계층 관계를 나타낼때 사용된다.</p>\n<ul>\n<li>예를 들어, <code class=\"language-text\">https://api.trueshort.com/kospi/stock/005930</code> 이라는 구조라면, KOSPI에 속해있는 주식(Stock) 중 삼성전자(005930)을 나타내는 것이다.</li>\n<li><code class=\"language-text\">https://api.shopping.com/books/novel/stephenking</code> 이라는 구조 이라면, 책들중 소설 그리고 소설중 Stephen King의 소설을 나타내는 구조이다.</li>\n</ul>\n</li>\n<li>URI에 <code class=\"language-text\">_</code>(underscore)는 주로 포함하지않고 또한 영어 대문자보다 소문자를 쓴다. 그리고 너무 긴 단어는 잘 사용하지 않는다. 이 모든건 가독성을 높이기 위해서다.</li>\n<li>\n<p>URI는 명사를 사용한다.</p>\n<ul>\n<li><code class=\"language-text\">/books/novel/stephenking</code> 이라고 하지 <code class=\"language-text\">/books/novel/get-stephenking</code> 이라고 잘 하지 않는다.</li>\n<li>그 이유는 동사는 <code class=\"language-text\">GET</code>, <code class=\"language-text\">POST</code> 같은 HTTP Method를 통해 표현하기 때문이다.</li>\n</ul>\n</li>\n</ul>\n<p>참조:<a href=\"https://stackoverflow.com/c/wecode/questions/308\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/c/wecode/questions/308</a>  [>WECODE 은우님강의자료]</p>","fields":{"slug":"/posts/blogwebhttpbasic","tagSlugs":null},"frontmatter":{"date":"2020-02-13T23:40:32.169Z","description":"위코드 은우님이 발표하신 HTTP의 구조, 핵심요소 강의 자료입니다.","tags":null,"title":"HTTP 구조 및 핵심 요소","socialImage":null}}},"pageContext":{"slug":"/posts/blogwebhttpbasic"}}}